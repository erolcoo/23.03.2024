{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_ng_container_11_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1, \"Email is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoginComponent_ng_container_11_p_1_Template, 2, 0, \"p\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"required\"]);\n  }\n}\nconst _c0 = function () {\n  return [\"/register\"];\n};\nexport class LoginComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    this.errorMessage = '';\n    this.isUserRegistered = false; // Дефинираме променлива за проверка на регистриран потребител\n  }\n\n  login(form) {\n    if (form.invalid) {\n      return;\n    }\n    const email = form.value.email; // Извличане на email от формата\n    const password = form.value.password; // Извличане на парола от формата\n    if (!this.userService.isUserRegistered(email)) {\n      // Ако потребителят не е регистриран, задаваме флага на false\n      this.isUserRegistered = false;\n      this.router.navigate(['/register']);\n      return;\n    }\n    // В противен случай, ако потребителят е регистриран, извикваме метода login на userService\n    this.userService.login(email, password);\n    this.router.navigate(['/home']);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"login\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"\", \"ngModel\", \"\", \"required\", \"\"], [\"inputEmail\", \"ngModel\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\"], [\"type\", \"submit\"], [\"aria-current\", \"page\", 1, \"nav-link\", \"active\", 3, \"routerLink\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r4);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.login(_r0));\n        });\n        i0.ɵɵelementStart(3, \"fieldset\")(4, \"div\")(5, \"h2\");\n        i0.ɵɵtext(6, \"login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"label\", 3);\n        i0.ɵɵtext(8, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4, 5);\n        i0.ɵɵtemplate(11, LoginComponent_ng_container_11_Template, 2, 1, \"ng-container\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\")(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\")(19, \"a\", 10);\n        i0.ɵɵtext(20, \"Go to Register\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(10);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", _r1.touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      }\n    },\n    dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".container[_ngcontent-%COMP%]{\\n  display: flex;\\n  flex-direction: column;\\n}\\nform[_ngcontent-%COMP%] {\\n  margin: 2em auto 0;\\n  width: 300px;\\n  margin-left: 50px;\\n  padding: 20px;\\n  border: 3px solid #090000;\\n  border-radius: 5px;\\n  background-color: lightskyblue;\\n  color: white;\\n  text-align: center;\\n  font-style: italic;\\n  font-size: 24px;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n  width: calc(100% - 12px);\\n  padding: 6px;\\n  border: 1px solid #ccc;\\n  border-radius: 3px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 8px;\\n  background-color: lightskyblue;\\n  border: none;\\n  border-radius: 3px;\\n  color: #fff;\\n  cursor: pointer;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: darkslategray;\\n  color: black;\\n  cursor: pointer;\\n}\\n\\n\\ndiv[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  font-family: \\\"Times New Roman\\\", Times, serif;\\n  font-style: italic;\\n  font-size: bold;\\n  font-size: 16px;\\n  color: black;\\n  text-decoration: none;\\n  border: 1px solid black;\\n  padding: 10px;\\n  margin-right: 10px;\\n  border-radius: 20px;\\n  background-color: lightskyblue;\\n}\\n\\ndiv[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n  background-color: darkslategray;\\n  color: black;\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLDhCQUE4QjtFQUM5QixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFFQTs7RUFFRSx3QkFBd0I7RUFDeEIsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLDhCQUE4QjtFQUM5QixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsK0JBQStCO0VBQy9CLFlBQVk7RUFDWixlQUFlO0FBQ2pCOzs7QUFHQTtFQUNFLDRDQUE0QztFQUM1QyxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGVBQWU7RUFDZixZQUFZO0VBQ1oscUJBQXFCO0VBQ3JCLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSwrQkFBK0I7RUFDL0IsWUFBWTtFQUNaLGVBQWU7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuZm9ybSB7XG4gIG1hcmdpbjogMmVtIGF1dG8gMDtcbiAgd2lkdGg6IDMwMHB4O1xuICBtYXJnaW4tbGVmdDogNTBweDtcbiAgcGFkZGluZzogMjBweDtcbiAgYm9yZGVyOiAzcHggc29saWQgIzA5MDAwMDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodHNreWJsdWU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogMjRweDtcbn1cblxuZGl2IHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cblxubGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAxMnB4KTtcbiAgcGFkZGluZzogNnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbmJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c2t5Ymx1ZTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGNvbG9yOiAjZmZmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IGRhcmtzbGF0ZWdyYXk7XG4gIGNvbG9yOiBibGFjaztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5cbmRpdiBhIHtcbiAgZm9udC1mYW1pbHk6IFwiVGltZXMgTmV3IFJvbWFuXCIsIFRpbWVzLCBzZXJpZjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXNpemU6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6IGJsYWNrO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICBwYWRkaW5nOiAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c2t5Ymx1ZTtcbn1cblxuZGl2IGE6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrc2xhdGVncmF5O1xuICBjb2xvcjogYmxhY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerStart","ɵɵtemplate","LoginComponent_ng_container_11_p_1_Template","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","_r1","errors","LoginComponent","constructor","userService","router","errorMessage","isUserRegistered","login","form","invalid","email","value","password","navigate","_","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r4","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","LoginComponent_ng_container_11_Template","touched","ɵɵpureFunction0","_c0"],"sources":["C:\\SoftUni\\23.03.2024\\src\\app\\login\\login.component.ts","C:\\SoftUni\\23.03.2024\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  errorMessage: string = '';\n  isUserRegistered: boolean = false; // Дефинираме променлива за проверка на регистриран потребител\n\n  constructor(private userService: UserService, private router: Router) {}\n\n  login(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n\n    const email = form.value.email; // Извличане на email от формата\n    const password = form.value.password; // Извличане на парола от формата\n\n    if (!this.userService.isUserRegistered(email)) {\n      // Ако потребителят не е регистриран, задаваме флага на false\n      this.isUserRegistered = false;\n      this.router.navigate(['/register']);\n      return;\n    }\n\n    // В противен случай, ако потребителят е регистриран, извикваме метода login на userService\n    this.userService.login(email, password);\n    this.router.navigate(['/home']);\n  }\n}\n","<div class=\"container\">\n  <form class=\"login\" #form=\"ngForm\" (ngSubmit)=\"login(form)\">\n    <fieldset>\n      <div>\n        <h2>login</h2>\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          placeholder=\"\"\n          ngModel\n          #inputEmail=\"ngModel\"\n          required\n        />\n        <ng-container *ngIf=\"inputEmail.touched\">\n          <p class=\"error\" *ngIf=\"inputEmail.errors?.['required']\">Email is required!</p>\n        </ng-container>\n      </div>\n      <div>\n        <label for=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" name=\"password\" required />\n      </div>\n      <button type=\"submit\">Login</button>\n    </fieldset>\n    <div>\n      <a\n        class=\"nav-link active\"\n        aria-current=\"page\"\n        [routerLink]=\"['/register']\"\n        >Go to Register</a\n      >\n    </div>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}